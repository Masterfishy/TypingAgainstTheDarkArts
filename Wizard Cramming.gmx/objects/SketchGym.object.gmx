<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sketchGym</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
image_speed = 1/3;
lesson = "0: Welcome!";
saying = "";
line = 0;
alarm[0] = 10;
player = instance_nearest(x, y, SketchElduin);
bosshealth = 100;

hasMovedLeft = false;
hasMovedRight = false;

hasPressedSpace = false;

hasCastMM = false;

shootRate = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cast Fireball
newFireball = instance_create(x, y, SketchBossBall);
with (newFireball){
    direct = irandom_range(1, 4);
    if(direct == 1){
        move_towards_point(global.lane1x, global.lane1y, 10);
        image_angle = direction;
        var shoot = audio_play_sound(snd_shootBoss, 9, false);
        audio_sound_pitch(shoot, random_range(.8,1.2))
    }
    else if(direct == 2){
        move_towards_point(global.lane2x, global.lane2y, 10);
        image_angle = direction;
        var shoot = audio_play_sound(snd_shootBoss, 9, false);
        audio_sound_pitch(shoot, random_range(.8,1.2))
    }
    else if(direct == 3){
        move_towards_point(global.lane3x, global.lane3y, 10);
        image_angle = direction;
        var shoot = audio_play_sound(snd_shootBoss, 9, false);
        audio_sound_pitch(shoot, random_range(.8,1.2))
    }
    else{
        move_towards_point(global.lane4x, global.lane4y, 10);
        image_angle = direction;
        var shoot = audio_play_sound(snd_shootBoss, 9, false);
        audio_sound_pitch(shoot, random_range(.8,1.2))
    }
}
alarm[2] = shootRate;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///How Long To Show Indicators
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speaking
switch(line){
    case 0:
        saying = "Hey Elduin!#Welcome to my notes!";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 160;
        line++;
        break;
    case 1:
        saying = "I know you have done like...#literally no work this year.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 220;
        line++;
        break;
    case 2:
        saying = "So let me lay out# the basics for you!";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 120;
        line++;
        break;
    case 3:
        lesson = "1: The Basics";
        saying = "The professors are going to be#really, really, mad at you.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 220;
        line++;
        break;
    case 4:
        saying = "I will be playing the role of your#handsome, angry, cool professor.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 220;
        alarm[1] = 320;
        line++;
        break;
    case 5:
        saying = "You are you of course.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 120;
        line++;
        break;
    case 6:
        saying = "First off, you are#going to have to move around.";
        lesson = "1: Basic Movement";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 220;
        line++;
        break;
    case 7:
        saying = "Use the A and D keys to move around!";
        scr_text(saying, .5, 285, 31);
        break;
    case 8:
        saying = "Great job!";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 220;
        line++;
        break;
    case 9:
        saying = "Next up,#you need to be able to cast#at least one spell.";
        lesson = "2: Basic Casting";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 220;
        line++;
        break;
    case 10:
        saying = "Press the SPACE Key to stop#moving and enter Cast Mode.#Your mode is shown at the bottom.";
        scr_text(saying, .5, 285, 31);
        break;
    case 11:
        saying = "Good!";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 80;
        line++;
        break;
    case 12:
        saying = "You are now in cast mode.#Whatever you type will be#written down to use as a spell.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 260;
        line++;
        break;
    case 13:
        saying = "If you had actually studied,#you would know a few magic#words for spells.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 260;
        line++;
        break;
    case 14:
        saying = "The easiest spell is called#MAGIC MISSILE";
        lesson = "3: Magic Missile";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 220;
        line++;
        break;
    case 15:
        saying = "All you have to do is#type MM. Try it now.";
        scr_text(saying, .5, 285, 31);
        break;
    case 16:
        saying = "You did it.";
        scr_text(saying, .5, 285, 31);
        break;
    case 17:
        saying = "Ummmm, OW?!?";
        lesson = "4: College Combat";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 80;
        line++;
        break;
    case 18:
        saying = "That hurt!";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 80;
        line++;
        break;
    case 19:
        saying = "Well, you can see that#my health went down at#the top right.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 220;
        line++;
        break;
    case 20:
        saying = "Get it down to zero and#you have learned enough.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 200;
        line++;
        break;
    case 21:
        saying = "I'm not going to make it#TOO easy though.";
        lesson = "Final: Kobold Kombat";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 200;
        line++;
        break;
    case 22:
        saying = "Have at you!";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 100;
        alarm[2] = 30;
        line++;
        break;
    case 23:
        saying = "Move to different lanes#in dodge mode. Use MAGIC#MISSILE when you can!";
        scr_text(saying, .5, 285, 31);
        break;
    case 24:
        saying = "OOF!!!";
        lesson = "Completed.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 80;
        line++;
        break;
    case 25:
        saying = "Well, good luck with your# exam slacker.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 180;
        line++;
        break;
    case 26:
        saying = "You are going to need it.#You're next class is Attacks...#AGAINST THE DARK ARTS.";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 300;
        line++;
        break;
    case 27:
        saying = "Bye-bye!";
        scr_text(saying, .5, 285, 31);
        alarm[0] = 180;
        line++;
        break;
    case 28:
        if room_exists(room_next(room)) room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Indicators
if(alarm[1] != -1){
    draw_sprite(spr_sketchYou,-1,round(player.x)+60,round(player.y)-60);
    //draw_sprite(spr_sketchYou,-1,619,231);
    draw_sprite(spr_sketchMe,-1,619,231);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Lesson
draw_set_halign(fa_center);
draw_set_font(dialogue);
draw_text_transformed_colour(845, 76, "Gym The COOL Kobold", 1.3, 1.3, 0, c_white, c_white, c_white, c_white, 1);

draw_set_halign(fa_center);
draw_set_font(text);
draw_text_transformed_colour(837, 27, "Lesson " + lesson, 1.1, 1.1, 0, c_white, c_white, c_white, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Health Bar
draw_sprite_ext(spr_barback,0,590,161, 1, 1, 0, c_white, 1 );
draw_sprite_ext(spr_baract,0,590,161, (bosshealth/100)*1, 1, 0, c_white, 1 );
draw_sprite_ext(spr_barGray,0,590,161, 1, 1, 0, c_white, 1 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Tutorial
draw_self();
if(line == 7){
    draw_sprite(spr_sketchMove,-1,round(player.x)+80,round(player.y)-90);
    if (keyboard_check_pressed(ord("A"))){
        hasMovedLeft = true;
    }
    if (keyboard_check_pressed(ord("D"))){
        hasMovedRight = true;
    }
    if (hasMovedLeft == true and hasMovedRight == true){
        line++;
        alarm[0] =1;
    }
}

if(line == 10){
    if (keyboard_check_pressed(vk_space)){
        hasPressedSpace = true;
    }
    if(hasPressedSpace == true){
        line++;
        alarm[0] =1;
    }
}

if(line == 15){
    draw_sprite(spr_sketchType,-1,round(player.x)+80,round(player.y)-90);
    if(instance_exists(SketchMagicMissile)){
        hasCastMM = true;
    }
    if(hasCastMM){
        line++;
        alarm[0] =1;
    }
}

if(line == 16){
    if(bosshealth&lt;100){
        line++;
        alarm[0] = 1;
    }
}

if(line == 23){
    if(bosshealth&lt;=0){
        line++;
        alarm[0] = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
